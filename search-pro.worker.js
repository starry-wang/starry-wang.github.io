const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}W(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f==null||f.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":12,\"nextId\":12,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-64d78a50\",\"2\":\"v-15551100\",\"3\":\"v-1b998d77\",\"4\":\"v-1b998d77#problem-description\",\"5\":\"v-1b998d77#background\",\"6\":\"v-1b998d77#description\",\"7\":\"v-1b998d77#solution\",\"8\":\"v-1b998d77#understanding-time-zones-during-research\",\"9\":\"v-1b998d77#comparison-of-cst-gmt-and-utc-time-zones\",\"10\":\"v-1b998d77@0\",\"11\":\"v-1b998d77@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,52],\"1\":[2,6],\"2\":[1,14],\"3\":[4],\"4\":[2],\"5\":[1,39],\"6\":[1,45],\"7\":[1,43],\"8\":[5,7],\"9\":[8,141],\"10\":[null,null,2],\"11\":[null,null,1]},\"averageFieldLength\":[2.7,39.5,0.25],\"storedFields\":{\"0\":{\"h\":\"About me\",\"t\":[\"This blog was created to document my academic and technical journey. Welcome to my personal world.\",\"The content of this blog primarily covers topics related to computer fundamentals, Java development, computer vision, artificial intelligence, and more.\",\"I will regularly update the content, so remember to come back from time to time.\",\"The world is a vast database, and we are both its inquisitors and agents of change\"]},\"1\":{\"h\":\"Chit-Chat\",\"t\":[\"Personal perspective about the world.\"]},\"2\":{\"h\":\"Tech\",\"t\":[\"In this part, U can read some articles I wrote about my studying.\"]},\"3\":{\"h\":\"TimeZone in java & MySQL\"},\"4\":{\"h\":\"Problem Description\"},\"5\":{\"h\":\"Background\",\"t\":[\"The goal is to configure the time zone uniformly to GMT+8.\",\"The test server is located overseas, and server-side configuration is done using Docker. Initially, the time zone was not set in the Dockerfile, and the server-side Spring Boot program did not configure the time zone.\",\"The MySQL database is configured with system_time_zone set to CST, and time_zone set to +8:00.\"]},\"6\":{\"h\":\"Description\",\"t\":[\"There is a field called detail_date of type date in the database table. There is an SQL statement for time comparison for this field, for example:select * from table where detail_date >= #{bgn_date} and detail_date <= #{end_date}.\",\"During testing, it was observed that data where detail_date = bgn_date was not being retrieved, and this was identified as a time zone error.\"]},\"7\":{\"h\":\"Solution\",\"t\":[\"# Add time zone configuration in the Dockerfile; the root cause of the problem is that the Dockerfile was not configured properly RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime RUN echo 'Asia/Shanghai' > /etc/timezone # Add time zone configuration after the jdbc connection string &serverTimezone=GMT%2B8 # Configure the time zone in the program TimeZone.setDefault(TimeZone.getTimeZone(\\\"GMT+8\\\")); \"]},\"8\":{\"h\":\"Understanding Time Zones During Research\",\"t\":[\"The following answers are from ChatGPT3.5\"]},\"9\":{\"h\":\"Comparison of CST, GMT, and UTC Time Zones\",\"t\":[\"CST (Central Standard Time):\",\"CST stands for Central Standard Time and is typically associated with the time zone of the central region of North America. This includes cities in the central United States such as Chicago, Texas, and Missouri.\",\"CST is represented as UTC-6:00, which means it is 6 hours behind Coordinated Universal Time (UTC).\",\"It's important to note that CST can also refer to China Standard Time, but internationally, CST is often more closely associated with Central Standard Time.\",\"GMT (Greenwich Mean Time):\",\"GMT stands for Greenwich Mean Time and is one of the earliest standard times used in the world.\",\"GMT is based on the prime meridian at Greenwich, England, and represents the time difference relative to that meridian.\",\"However, in practical use, GMT has been largely replaced by Coordinated Universal Time (UTC) because UTC is more precise and not affected by daylight saving time. Therefore, nowadays GMT and UTC are almost equivalent.\",\"UTC (Coordinated Universal Time):\",\"UTC stands for Coordinated Universal Time and serves as the reference time standard internationally, commonly used for global coordination of time.\",\"UTC is measured using atomic clocks to ensure high precision. It is not affected by daylight saving time or time zone changes, making it a universal time standard.\",\"The time difference between UTC and GMT is very small, but UTC is more widely used globally due to its greater accuracy.\",\"Please note that different regions and countries may have different standard times and daylight saving time rules, so the exact representation of time zones may vary. When calculating time zone differences, it's best to use Coordinated Universal Time (UTC) as the reference baseline to avoid confusion and errors.\"]},\"10\":{\"c\":[\"java\",\"mysql\"]},\"11\":{\"c\":[\"bug\"]}},\"dirtCount\":0,\"index\":[[\"have\",{\"1\":{\"9\":1}}],[\"has\",{\"1\":{\"9\":1}}],[\"high\",{\"1\":{\"9\":1}}],[\"however\",{\"1\":{\"9\":1}}],[\"hours\",{\"1\":{\"9\":1}}],[\"6\",{\"1\":{\"9\":2}}],[\"nowadays\",{\"1\":{\"9\":1}}],[\"north\",{\"1\":{\"9\":1}}],[\"note\",{\"1\":{\"9\":2}}],[\"not\",{\"1\":{\"5\":2,\"6\":1,\"7\":1,\"9\":2}}],[\"5\",{\"1\":{\"8\":1}}],[\"2b8\",{\"1\":{\"7\":1}}],[\">\",{\"1\":{\"7\":1}}],[\">=\",{\"1\":{\"6\":1}}],[\"largely\",{\"1\":{\"9\":1}}],[\"localtime\",{\"1\":{\"7\":1}}],[\"located\",{\"1\":{\"5\":1}}],[\"ln\",{\"1\":{\"7\":1}}],[\"rules\",{\"1\":{\"9\":1}}],[\"run\",{\"1\":{\"7\":2}}],[\"root\",{\"1\":{\"7\":1}}],[\"replaced\",{\"1\":{\"9\":1}}],[\"representation\",{\"1\":{\"9\":1}}],[\"represents\",{\"1\":{\"9\":1}}],[\"represented\",{\"1\":{\"9\":1}}],[\"relative\",{\"1\":{\"9\":1}}],[\"related\",{\"1\":{\"0\":1}}],[\"reference\",{\"1\":{\"9\":2}}],[\"refer\",{\"1\":{\"9\":1}}],[\"regions\",{\"1\":{\"9\":1}}],[\"region\",{\"1\":{\"9\":1}}],[\"regularly\",{\"1\":{\"0\":1}}],[\"research\",{\"0\":{\"8\":1}}],[\"retrieved\",{\"1\":{\"6\":1}}],[\"read\",{\"1\":{\"2\":1}}],[\"remember\",{\"1\":{\"0\":1}}],[\"=\",{\"1\":{\"6\":1}}],[\"exact\",{\"1\":{\"9\":1}}],[\"example\",{\"1\":{\"6\":1}}],[\"equivalent\",{\"1\":{\"9\":1}}],[\"ensure\",{\"1\":{\"9\":1}}],[\"england\",{\"1\":{\"9\":1}}],[\"end\",{\"1\":{\"6\":1}}],[\"earliest\",{\"1\":{\"9\":1}}],[\"echo\",{\"1\":{\"7\":1}}],[\"etc\",{\"1\":{\"7\":2}}],[\"errors\",{\"1\":{\"9\":1}}],[\"error\",{\"1\":{\"6\":1}}],[\"<=\",{\"1\":{\"6\":1}}],[\"00\",{\"1\":{\"5\":1,\"9\":1}}],[\"+8\",{\"1\":{\"5\":1}}],[\"or\",{\"1\":{\"9\":1}}],[\"on\",{\"1\":{\"9\":1}}],[\"one\",{\"1\":{\"9\":1}}],[\"observed\",{\"1\":{\"6\":1}}],[\"overseas\",{\"1\":{\"5\":1}}],[\"often\",{\"1\":{\"9\":1}}],[\"of\",{\"0\":{\"9\":1},\"1\":{\"0\":2,\"6\":1,\"7\":1,\"9\":5}}],[\"greater\",{\"1\":{\"9\":1}}],[\"greenwich\",{\"1\":{\"9\":3}}],[\"globally\",{\"1\":{\"9\":1}}],[\"global\",{\"1\":{\"9\":1}}],[\"gmt\",{\"0\":{\"9\":1},\"1\":{\"9\":6}}],[\"gmt+8\",{\"1\":{\"5\":1,\"7\":1}}],[\"gettimezone\",{\"1\":{\"7\":1}}],[\"goal\",{\"1\":{\"5\":1}}],[\"zones\",{\"0\":{\"8\":1,\"9\":1},\"1\":{\"9\":1}}],[\"zoneinfo\",{\"1\":{\"7\":1}}],[\"zone\",{\"1\":{\"5\":5,\"6\":1,\"7\":3,\"9\":3}}],[\"small\",{\"1\":{\"9\":1}}],[\"saving\",{\"1\":{\"9\":3}}],[\"s\",{\"1\":{\"9\":2}}],[\"such\",{\"1\":{\"9\":1}}],[\"shanghai\",{\"1\":{\"7\":2}}],[\"share\",{\"1\":{\"7\":1}}],[\"sf\",{\"1\":{\"7\":1}}],[\"states\",{\"1\":{\"9\":1}}],[\"statement\",{\"1\":{\"6\":1}}],[\"stands\",{\"1\":{\"9\":3}}],[\"standard\",{\"1\":{\"9\":8}}],[\"string\",{\"1\":{\"7\":1}}],[\"studying\",{\"1\":{\"2\":1}}],[\"sql\",{\"1\":{\"6\":1}}],[\"system\",{\"1\":{\"5\":1}}],[\"spring\",{\"1\":{\"5\":1}}],[\"serves\",{\"1\":{\"9\":1}}],[\"servertimezone=gmt\",{\"1\":{\"7\":1}}],[\"server\",{\"1\":{\"5\":3}}],[\"select\",{\"1\":{\"6\":1}}],[\"setdefault\",{\"1\":{\"7\":1}}],[\"set\",{\"1\":{\"5\":3}}],[\"side\",{\"1\":{\"5\":2}}],[\"solution\",{\"0\":{\"7\":1}}],[\"some\",{\"1\":{\"2\":1}}],[\"so\",{\"1\":{\"0\":1,\"9\":1}}],[\"utc\",{\"0\":{\"9\":1},\"1\":{\"9\":11}}],[\"universal\",{\"1\":{\"9\":6}}],[\"united\",{\"1\":{\"9\":1}}],[\"uniformly\",{\"1\":{\"5\":1}}],[\"understanding\",{\"0\":{\"8\":1}}],[\"use\",{\"1\":{\"9\":2}}],[\"used\",{\"1\":{\"9\":3}}],[\"usr\",{\"1\":{\"7\":1}}],[\"using\",{\"1\":{\"5\":1,\"9\":1}}],[\"u\",{\"1\":{\"2\":1}}],[\"update\",{\"1\":{\"0\":1}}],[\"vary\",{\"1\":{\"9\":1}}],[\"vast\",{\"1\":{\"0\":1}}],[\"very\",{\"1\":{\"9\":1}}],[\"vision\",{\"1\":{\"0\":1}}],[\"following\",{\"1\":{\"8\":1}}],[\"for\",{\"1\":{\"6\":3,\"9\":4}}],[\"field\",{\"1\":{\"6\":2}}],[\"from\",{\"1\":{\"0\":1,\"6\":1,\"8\":1}}],[\"fundamentals\",{\"1\":{\"0\":1}}],[\"bug\",{\"2\":{\"11\":1}}],[\"but\",{\"1\":{\"9\":2}}],[\"by\",{\"1\":{\"9\":3}}],[\"baseline\",{\"1\":{\"9\":1}}],[\"based\",{\"1\":{\"9\":1}}],[\"background\",{\"0\":{\"5\":1}}],[\"back\",{\"1\":{\"0\":1}}],[\"best\",{\"1\":{\"9\":1}}],[\"between\",{\"1\":{\"9\":1}}],[\"because\",{\"1\":{\"9\":1}}],[\"been\",{\"1\":{\"9\":1}}],[\"behind\",{\"1\":{\"9\":1}}],[\"being\",{\"1\":{\"6\":1}}],[\"bgn\",{\"1\":{\"6\":2}}],[\"boot\",{\"1\":{\"5\":1}}],[\"both\",{\"1\":{\"0\":1}}],[\"blog\",{\"1\":{\"0\":2}}],[\"important\",{\"1\":{\"9\":1}}],[\"identified\",{\"1\":{\"6\":1}}],[\"it\",{\"1\":{\"6\":1,\"9\":5}}],[\"its\",{\"1\":{\"0\":1,\"9\":1}}],[\"internationally\",{\"1\":{\"9\":2}}],[\"intelligence\",{\"1\":{\"0\":1}}],[\"includes\",{\"1\":{\"9\":1}}],[\"initially\",{\"1\":{\"5\":1}}],[\"in\",{\"0\":{\"3\":1},\"1\":{\"2\":1,\"5\":1,\"6\":1,\"7\":2,\"9\":3}}],[\"inquisitors\",{\"1\":{\"0\":1}}],[\"is\",{\"1\":{\"0\":1,\"5\":4,\"6\":2,\"7\":1,\"9\":11}}],[\"i\",{\"1\":{\"0\":1,\"2\":1}}],[\"due\",{\"1\":{\"9\":1}}],[\"during\",{\"0\":{\"8\":1},\"1\":{\"6\":1}}],[\"daylight\",{\"1\":{\"9\":3}}],[\"data\",{\"1\":{\"6\":1}}],[\"database\",{\"1\":{\"0\":1,\"5\":1,\"6\":1}}],[\"date\",{\"1\":{\"6\":8}}],[\"different\",{\"1\":{\"9\":2}}],[\"differences\",{\"1\":{\"9\":1}}],[\"difference\",{\"1\":{\"9\":2}}],[\"did\",{\"1\":{\"5\":1}}],[\"dockerfile\",{\"1\":{\"5\":1,\"7\":2}}],[\"docker\",{\"1\":{\"5\":1}}],[\"document\",{\"1\":{\"0\":1}}],[\"done\",{\"1\":{\"5\":1}}],[\"detail\",{\"1\":{\"6\":4}}],[\"description\",{\"0\":{\"4\":1,\"6\":1}}],[\"development\",{\"1\":{\"0\":1}}],[\"jdbc\",{\"1\":{\"7\":1}}],[\"java\",{\"0\":{\"3\":1},\"1\":{\"0\":1},\"2\":{\"10\":1}}],[\"journey\",{\"1\":{\"0\":1}}],[\"please\",{\"1\":{\"9\":1}}],[\"precision\",{\"1\":{\"9\":1}}],[\"precise\",{\"1\":{\"9\":1}}],[\"practical\",{\"1\":{\"9\":1}}],[\"prime\",{\"1\":{\"9\":1}}],[\"primarily\",{\"1\":{\"0\":1}}],[\"properly\",{\"1\":{\"7\":1}}],[\"program\",{\"1\":{\"5\":1,\"7\":1}}],[\"problem\",{\"0\":{\"4\":1},\"1\":{\"7\":1}}],[\"part\",{\"1\":{\"2\":1}}],[\"perspective\",{\"1\":{\"1\":1}}],[\"personal\",{\"1\":{\"0\":1,\"1\":1}}],[\"clocks\",{\"1\":{\"9\":1}}],[\"closely\",{\"1\":{\"9\":1}}],[\"cities\",{\"1\":{\"9\":1}}],[\"central\",{\"1\":{\"9\":5}}],[\"calculating\",{\"1\":{\"9\":1}}],[\"called\",{\"1\":{\"6\":1}}],[\"cause\",{\"1\":{\"7\":1}}],[\"can\",{\"1\":{\"2\":1,\"9\":1}}],[\"cst\",{\"0\":{\"9\":1},\"1\":{\"5\":1,\"9\":5}}],[\"china\",{\"1\":{\"9\":1}}],[\"chicago\",{\"1\":{\"9\":1}}],[\"chit\",{\"0\":{\"1\":1}}],[\"chatgpt3\",{\"1\":{\"8\":1}}],[\"chat\",{\"0\":{\"1\":1}}],[\"changes\",{\"1\":{\"9\":1}}],[\"change\",{\"1\":{\"0\":1}}],[\"countries\",{\"1\":{\"9\":1}}],[\"coordination\",{\"1\":{\"9\":1}}],[\"coordinated\",{\"1\":{\"9\":5}}],[\"confusion\",{\"1\":{\"9\":1}}],[\"configuration\",{\"1\":{\"5\":1,\"7\":2}}],[\"configured\",{\"1\":{\"5\":1,\"7\":1}}],[\"configure\",{\"1\":{\"5\":2,\"7\":1}}],[\"connection\",{\"1\":{\"7\":1}}],[\"content\",{\"1\":{\"0\":2}}],[\"commonly\",{\"1\":{\"9\":1}}],[\"comparison\",{\"0\":{\"9\":1},\"1\":{\"6\":1}}],[\"computer\",{\"1\":{\"0\":2}}],[\"come\",{\"1\":{\"0\":1}}],[\"covers\",{\"1\":{\"0\":1}}],[\"created\",{\"1\":{\"0\":1}}],[\"when\",{\"1\":{\"9\":1}}],[\"where\",{\"1\":{\"6\":2}}],[\"which\",{\"1\":{\"9\":1}}],[\"widely\",{\"1\":{\"9\":1}}],[\"with\",{\"1\":{\"5\":1,\"9\":2}}],[\"will\",{\"1\":{\"0\":1}}],[\"wrote\",{\"1\":{\"2\":1}}],[\"we\",{\"1\":{\"0\":1}}],[\"welcome\",{\"1\":{\"0\":1}}],[\"world\",{\"1\":{\"0\":2,\"1\":1,\"9\":1}}],[\"was\",{\"1\":{\"0\":1,\"5\":1,\"6\":3,\"7\":1}}],[\"avoid\",{\"1\":{\"9\":1}}],[\"accuracy\",{\"1\":{\"9\":1}}],[\"academic\",{\"1\":{\"0\":1}}],[\"almost\",{\"1\":{\"9\":1}}],[\"also\",{\"1\":{\"9\":1}}],[\"affected\",{\"1\":{\"9\":2}}],[\"after\",{\"1\":{\"7\":1}}],[\"atomic\",{\"1\":{\"9\":1}}],[\"at\",{\"1\":{\"9\":1}}],[\"america\",{\"1\":{\"9\":1}}],[\"add\",{\"1\":{\"7\":2}}],[\"associated\",{\"1\":{\"9\":2}}],[\"asia\",{\"1\":{\"7\":2}}],[\"as\",{\"1\":{\"6\":1,\"9\":4}}],[\"answers\",{\"1\":{\"8\":1}}],[\"an\",{\"1\":{\"6\":1}}],[\"and\",{\"0\":{\"9\":1},\"1\":{\"0\":4,\"5\":3,\"6\":2,\"9\":11}}],[\"agents\",{\"1\":{\"0\":1}}],[\"articles\",{\"1\":{\"2\":1}}],[\"artificial\",{\"1\":{\"0\":1}}],[\"are\",{\"1\":{\"0\":1,\"8\":1,\"9\":1}}],[\"a\",{\"1\":{\"0\":1,\"6\":2,\"9\":1}}],[\"about\",{\"0\":{\"0\":1},\"1\":{\"1\":1,\"2\":1}}],[\"may\",{\"1\":{\"9\":2}}],[\"making\",{\"1\":{\"9\":1}}],[\"missouri\",{\"1\":{\"9\":1}}],[\"more\",{\"1\":{\"0\":1,\"9\":3}}],[\"mysql\",{\"0\":{\"3\":1},\"1\":{\"5\":1},\"2\":{\"10\":1}}],[\"my\",{\"1\":{\"0\":2,\"2\":1}}],[\"measured\",{\"1\":{\"9\":1}}],[\"mean\",{\"1\":{\"9\":2}}],[\"means\",{\"1\":{\"9\":1}}],[\"meridian\",{\"1\":{\"9\":2}}],[\"me\",{\"0\":{\"0\":1}}],[\"typically\",{\"1\":{\"9\":1}}],[\"type\",{\"1\":{\"6\":1}}],[\"table\",{\"1\":{\"6\":2}}],[\"texas\",{\"1\":{\"9\":1}}],[\"testing\",{\"1\":{\"6\":1}}],[\"test\",{\"1\":{\"5\":1}}],[\"tech\",{\"0\":{\"2\":1}}],[\"technical\",{\"1\":{\"0\":1}}],[\"times\",{\"1\":{\"9\":2}}],[\"timezone\",{\"0\":{\"3\":1},\"1\":{\"7\":3}}],[\"time\",{\"0\":{\"8\":1,\"9\":1},\"1\":{\"0\":2,\"5\":5,\"6\":2,\"7\":3,\"9\":23}}],[\"that\",{\"1\":{\"6\":1,\"7\":1,\"9\":3}}],[\"therefore\",{\"1\":{\"9\":1}}],[\"there\",{\"1\":{\"6\":2}}],[\"the\",{\"1\":{\"0\":3,\"1\":1,\"5\":8,\"6\":1,\"7\":7,\"8\":1,\"9\":11}}],[\"this\",{\"1\":{\"0\":2,\"2\":1,\"6\":2,\"9\":1}}],[\"topics\",{\"1\":{\"0\":1}}],[\"to\",{\"1\":{\"0\":5,\"5\":4,\"9\":7}}]],\"serializationVersion\":2},\"/zh/\":{\"documentCount\":12,\"nextId\":12,\"documentIds\":{\"0\":\"v-858cfdd6\",\"1\":\"v-727e6e47\",\"2\":\"v-2c463431\",\"3\":\"v-f5cdb530\",\"4\":\"v-f5cdb530#问题描述\",\"5\":\"v-f5cdb530#背景\",\"6\":\"v-f5cdb530#描述\",\"7\":\"v-f5cdb530#解决\",\"8\":\"v-f5cdb530#过程中查询资料对时区的了解\",\"9\":\"v-f5cdb530#cst、gmt-和-utc-时区对比\",\"10\":\"v-f5cdb530@0\",\"11\":\"v-f5cdb530@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,51],\"1\":[1,14],\"2\":[1,16],\"3\":[5],\"4\":[2],\"5\":[1,40],\"6\":[1,51],\"7\":[1,55],\"8\":[8,6],\"9\":[8,132],\"10\":[null,null,3],\"11\":[null,null,1]},\"averageFieldLength\":[3,41.9,0.3333333333333333],\"storedFields\":{\"0\":{\"h\":\"关于我\",\"t\":[\"创建这个博客，以记录自己的学术和技术旅程，欢迎来到我的学习笔记世界。\",\"博客内容主要关于计算机基础知识、java开发、计算机视觉、人工智能等领域相关信息。\",\"我会定期进行内容更新，请记得偶尔回来。\",\"世界是一个巨大的数据库，我们是其中的查询者和改变者。\"]},\"1\":{\"h\":\"漫谈\",\"t\":[\"和生活和世界相关的所有想法，下述所有文章仅代表个人见解。\"]},\"2\":{\"h\":\"技术\",\"t\":[\"在这个部分，你可以阅读到我在学习的时候留下的一些笔记。\"]},\"3\":{\"h\":\"Java与MySQL时区一致性\"},\"4\":{\"h\":\"问题描述\"},\"5\":{\"h\":\"背景\",\"t\":[\"期望将时区统一配置为GMT+8\",\"测试服务器在海外，基于docker进行服务端配置，初始未在dockerfile中设置时区，服务端Springboot程序未对时区做配置；\",\"MySQL数据库已配置system_time_zone为CST，time_zone为+8:00。\"]},\"6\":{\"h\":\"描述\",\"t\":[\"数据库表中有一字段detail_date类型为date，在程序中有针对该字段的时间比较的sql语句，例select * from table where detail_date>= #{bgn_date} and detail_date<= #{end_date}。\",\"在测试过程中发现detail_date=bgn_date的数据不会被检索出来，鉴定为时区错误。\"]},\"7\":{\"h\":\"解决\",\"t\":[\"# 在Dockerfile中增加时区配置，最后一直出问题就是dockerfile没进行配置 RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime RUN echo 'Asia/Shanghai' >/etc/timezone # 在jdbc链接后增加时区配置 &serverTimezone=GMT%2B8 # 在程序中对时区进行配置 TimeZone.setDefault(TimeZone.getTimeZone(\\\"GMT+8\\\")); \"]},\"8\":{\"h\":\"过程中查询资料对时区的了解\",\"t\":[\"以下回答来自ChatGPT3.5\"]},\"9\":{\"h\":\"CST、GMT 和 UTC 时区对比\",\"t\":[\"CST（Central Standard Time）：\",\"CST 代表中部标准时间，通常与北美中部地区的时区相对应。这包括美国中部地区的城市，如芝加哥、得克萨斯州和密苏里州。\",\"CST 使用 UTC-6:00 表示，即比协调世界时（UTC）早 6 小时。\",\"注意，CST 还可以指代中国标准时间，但在国际上，CST 通常与中部标准时间关联较多。\",\"GMT（Greenwich Mean Time）：\",\"GMT 代表格林威治标准时间，是世界上最早使用的标准时间之一。\",\"GMT 基于英国格林威治的本初子午线，表示时差相对于该子午线的时间。\",\"然而，GMT 在实际使用中已经被协调世界时（UTC）所取代，因为 UTC 更加精确，不受夏令时的影响。因此，现在 GMT 和 UTC 几乎是等同的。\",\"UTC（Coordinated Universal Time）：\",\"UTC 代表协调世界时，是国际标准时间的参考基准，通常用于全球协调时间。\",\"UTC 使用原子钟的时间测量，以确保高度精确性。它不受夏令时或时区变化的影响，因此是全球通用的时间标准。\",\"UTC 的时差相对于 GMT 微小，但由于更精确，因此在全球范围内更广泛使用。\",\"请注意，不同地区和国家可能有不同的标准时间和夏令时规则，因此时区的确切表示方式可能会有所不同。在计算时区差异时，最好使用协调世界时（UTC）作为参考基准，以避免混淆和错误。\"]},\"10\":{\"c\":[\"java\",\"mysql\"]},\"11\":{\"c\":[\"bug\"]}},\"dirtCount\":0,\"index\":[[\"混淆\",{\"1\":{\"9\":1}}],[\"避免\",{\"1\":{\"9\":1}}],[\"作为\",{\"1\":{\"9\":1}}],[\"差异\",{\"1\":{\"9\":1}}],[\"计算\",{\"1\":{\"9\":1}}],[\"计算机\",{\"1\":{\"0\":2}}],[\"会\",{\"1\":{\"9\":1}}],[\"方式\",{\"1\":{\"9\":1}}],[\"确切\",{\"1\":{\"9\":1}}],[\"确保\",{\"1\":{\"9\":1}}],[\"规则\",{\"1\":{\"9\":1}}],[\"可能\",{\"1\":{\"9\":2}}],[\"可以\",{\"1\":{\"2\":1,\"9\":1}}],[\"国家\",{\"1\":{\"9\":1}}],[\"国际标准\",{\"1\":{\"9\":1}}],[\"国际\",{\"1\":{\"9\":1}}],[\"广泛\",{\"1\":{\"9\":1}}],[\"内\",{\"1\":{\"9\":1}}],[\"内容\",{\"1\":{\"0\":2}}],[\"范围\",{\"1\":{\"9\":1}}],[\"由于\",{\"1\":{\"9\":1}}],[\"微小\",{\"1\":{\"9\":1}}],[\"用\",{\"1\":{\"9\":1}}],[\"用于\",{\"1\":{\"9\":1}}],[\"变化\",{\"1\":{\"9\":1}}],[\"或\",{\"1\":{\"9\":1}}],[\"它\",{\"1\":{\"9\":1}}],[\"高度\",{\"1\":{\"9\":1}}],[\"测量\",{\"1\":{\"9\":1}}],[\"测试\",{\"1\":{\"5\":1,\"6\":1}}],[\"原子钟\",{\"1\":{\"9\":1}}],[\"协调\",{\"1\":{\"9\":1}}],[\"协调世界时\",{\"1\":{\"9\":4}}],[\"全球通\",{\"1\":{\"9\":1}}],[\"全球\",{\"1\":{\"9\":2}}],[\"参考\",{\"1\":{\"9\":2}}],[\"几乎\",{\"1\":{\"9\":1}}],[\"现在\",{\"1\":{\"9\":1}}],[\"因此\",{\"1\":{\"9\":4}}],[\"因为\",{\"1\":{\"9\":1}}],[\"影响\",{\"1\":{\"9\":2}}],[\"夏令时\",{\"1\":{\"9\":3}}],[\"不同\",{\"1\":{\"9\":2}}],[\"不受\",{\"1\":{\"9\":2}}],[\"不会\",{\"1\":{\"6\":1}}],[\"精确性\",{\"1\":{\"9\":1}}],[\"精确\",{\"1\":{\"9\":2}}],[\"更\",{\"1\":{\"9\":2}}],[\"更加\",{\"1\":{\"9\":1}}],[\"更新\",{\"1\":{\"0\":1}}],[\"取代\",{\"1\":{\"9\":1}}],[\"所\",{\"1\":{\"9\":1}}],[\"所有\",{\"1\":{\"1\":2}}],[\"实际\",{\"1\":{\"9\":1}}],[\"然而\",{\"1\":{\"9\":1}}],[\"子午线\",{\"1\":{\"9\":1}}],[\"该\",{\"1\":{\"9\":1}}],[\"该字\",{\"1\":{\"6\":1}}],[\"于\",{\"1\":{\"9\":2}}],[\"本初子午线\",{\"1\":{\"9\":1}}],[\"英国\",{\"1\":{\"9\":1}}],[\"之一\",{\"1\":{\"9\":1}}],[\"最好\",{\"1\":{\"9\":1}}],[\"最早\",{\"1\":{\"9\":1}}],[\"最后\",{\"1\":{\"7\":1}}],[\"格林威治\",{\"1\":{\"9\":2}}],[\"mean\",{\"1\":{\"9\":1}}],[\"mysql\",{\"0\":{\"3\":1},\"1\":{\"5\":1},\"2\":{\"10\":1}}],[\"多\",{\"1\":{\"9\":1}}],[\"较\",{\"1\":{\"9\":1}}],[\"关联\",{\"1\":{\"9\":1}}],[\"关于\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}],[\"上\",{\"1\":{\"9\":2}}],[\"但\",{\"1\":{\"9\":2}}],[\"指代\",{\"1\":{\"9\":1}}],[\"还\",{\"1\":{\"9\":1}}],[\"注意\",{\"1\":{\"9\":2}}],[\"小时\",{\"1\":{\"9\":1}}],[\"早\",{\"1\":{\"9\":1}}],[\"比\",{\"1\":{\"9\":1}}],[\"比较\",{\"1\":{\"6\":1}}],[\"即\",{\"1\":{\"9\":1}}],[\"表示\",{\"1\":{\"9\":3}}],[\"表中\",{\"1\":{\"6\":1}}],[\"6\",{\"1\":{\"9\":2}}],[\"使用\",{\"1\":{\"9\":6}}],[\"密苏里州\",{\"1\":{\"9\":1}}],[\"得克萨斯州\",{\"1\":{\"9\":1}}],[\"芝加哥\",{\"1\":{\"9\":1}}],[\"如\",{\"1\":{\"9\":1}}],[\"城市\",{\"1\":{\"9\":1}}],[\"美国\",{\"1\":{\"9\":1}}],[\"包括\",{\"1\":{\"9\":1}}],[\"这\",{\"1\":{\"9\":1}}],[\"这个\",{\"1\":{\"0\":1,\"2\":1}}],[\"应\",{\"1\":{\"9\":1}}],[\"相对\",{\"1\":{\"9\":3}}],[\"相关\",{\"1\":{\"0\":1,\"1\":1}}],[\"地区\",{\"1\":{\"9\":3}}],[\"北美\",{\"1\":{\"9\":1}}],[\"通常\",{\"1\":{\"9\":3}}],[\"标准\",{\"1\":{\"9\":7}}],[\"：\",{\"1\":{\"9\":3}}],[\"）\",{\"1\":{\"9\":6}}],[\"（\",{\"1\":{\"9\":6}}],[\"universal\",{\"1\":{\"9\":1}}],[\"utc\",{\"0\":{\"9\":1},\"1\":{\"9\":10}}],[\"usr\",{\"1\":{\"7\":1}}],[\"5\",{\"1\":{\"8\":1}}],[\"coordinated\",{\"1\":{\"9\":1}}],[\"central\",{\"1\":{\"9\":1}}],[\"chatgpt3\",{\"1\":{\"8\":1}}],[\"cst\",{\"0\":{\"9\":1},\"1\":{\"5\":1,\"9\":5}}],[\"来自\",{\"1\":{\"8\":1}}],[\"来到\",{\"1\":{\"0\":1}}],[\"回答\",{\"1\":{\"8\":1}}],[\"回来\",{\"1\":{\"0\":1}}],[\"了解\",{\"0\":{\"8\":1}}],[\"资料\",{\"0\":{\"8\":1}}],[\";\",{\"1\":{\"7\":1}}],[\")\",{\"1\":{\"7\":2}}],[\"\\\"\",{\"1\":{\"7\":2}}],[\"greenwich\",{\"1\":{\"9\":1}}],[\"gettimezone\",{\"1\":{\"7\":1}}],[\"gmt\",{\"0\":{\"9\":1},\"1\":{\"5\":1,\"7\":2,\"9\":6}}],[\"(\",{\"1\":{\"7\":2}}],[\".\",{\"1\":{\"7\":2,\"8\":1}}],[\"bug\",{\"2\":{\"11\":1}}],[\"b8\",{\"1\":{\"7\":1}}],[\"bgn\",{\"1\":{\"6\":2}}],[\"2\",{\"1\":{\"7\":1}}],[\"%\",{\"1\":{\"7\":1}}],[\"&\",{\"1\":{\"7\":1}}],[\"后\",{\"1\":{\"7\":1}}],[\"链接\",{\"1\":{\"7\":1}}],[\"jdbc\",{\"1\":{\"7\":1}}],[\"java\",{\"0\":{\"3\":1},\"1\":{\"0\":1},\"2\":{\"10\":1}}],[\"'\",{\"1\":{\"7\":2}}],[\"localtime\",{\"1\":{\"7\":1}}],[\"ln\",{\"1\":{\"7\":1}}],[\"echo\",{\"1\":{\"7\":1}}],[\"etc\",{\"1\":{\"7\":2}}],[\"end\",{\"1\":{\"6\":1}}],[\"asia\",{\"1\":{\"7\":2}}],[\"and\",{\"1\":{\"6\":1}}],[\"/\",{\"1\":{\"7\":10}}],[\"-\",{\"1\":{\"7\":1,\"9\":1}}],[\"run\",{\"1\":{\"7\":2}}],[\"没\",{\"1\":{\"7\":1}}],[\"就是\",{\"1\":{\"7\":1}}],[\"出\",{\"1\":{\"7\":1}}],[\"出来\",{\"1\":{\"6\":1}}],[\"增加\",{\"1\":{\"7\":2}}],[\"解决\",{\"0\":{\"7\":1}}],[\"错误\",{\"1\":{\"6\":1,\"9\":1}}],[\"鉴定\",{\"1\":{\"6\":1}}],[\"检索\",{\"1\":{\"6\":1}}],[\"被\",{\"1\":{\"6\":1,\"9\":1}}],[\"数据\",{\"1\":{\"6\":1}}],[\"数据库\",{\"1\":{\"0\":1,\"5\":1,\"6\":1}}],[\"发现\",{\"1\":{\"6\":1}}],[\"过程\",{\"0\":{\"8\":1},\"1\":{\"6\":1}}],[\"<\",{\"1\":{\"6\":1}}],[\"}\",{\"1\":{\"6\":2}}],[\"{\",{\"1\":{\"6\":2}}],[\"#\",{\"1\":{\"6\":2,\"7\":3}}],[\"=\",{\"1\":{\"6\":3,\"7\":1}}],[\">\",{\"1\":{\"6\":1,\"7\":1}}],[\"where\",{\"1\":{\"6\":1}}],[\"table\",{\"1\":{\"6\":1}}],[\"timezone\",{\"1\":{\"7\":3}}],[\"time\",{\"1\":{\"5\":2,\"9\":3}}],[\"from\",{\"1\":{\"6\":1}}],[\"*\",{\"1\":{\"6\":1}}],[\" \",{\"0\":{\"9\":3},\"1\":{\"6\":9,\"7\":17,\"9\":28}}],[\"例\",{\"1\":{\"6\":1}}],[\"语句\",{\"1\":{\"6\":1}}],[\"段\",{\"1\":{\"6\":1}}],[\"针对\",{\"1\":{\"6\":1}}],[\"类型\",{\"1\":{\"6\":1}}],[\"date\",{\"1\":{\"6\":8}}],[\"detail\",{\"1\":{\"6\":4}}],[\"dockerfile\",{\"1\":{\"5\":1,\"7\":2}}],[\"docker\",{\"1\":{\"5\":1}}],[\"有所不同\",{\"1\":{\"9\":1}}],[\"有\",{\"1\":{\"6\":1,\"9\":1}}],[\"00\",{\"1\":{\"5\":1,\"9\":1}}],[\":\",{\"1\":{\"5\":1,\"9\":1}}],[\"zoneinfo\",{\"1\":{\"7\":1}}],[\"zone\",{\"1\":{\"5\":2}}],[\"_\",{\"1\":{\"5\":3,\"6\":7}}],[\"standard\",{\"1\":{\"9\":1}}],[\"setdefault\",{\"1\":{\"7\":1}}],[\"servertimezone\",{\"1\":{\"7\":1}}],[\"select\",{\"1\":{\"6\":1}}],[\"shanghai\",{\"1\":{\"7\":2}}],[\"share\",{\"1\":{\"7\":1}}],[\"sf\",{\"1\":{\"7\":1}}],[\"sql\",{\"1\":{\"6\":1}}],[\"system\",{\"1\":{\"5\":1}}],[\"springboot\",{\"1\":{\"5\":1}}],[\"已经\",{\"1\":{\"9\":1}}],[\"已\",{\"1\":{\"5\":1}}],[\"；\",{\"1\":{\"5\":1}}],[\"做\",{\"1\":{\"5\":1}}],[\"对比\",{\"0\":{\"9\":1}}],[\"对\",{\"0\":{\"8\":1},\"1\":{\"5\":1,\"7\":1}}],[\"程序\",{\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"设置\",{\"1\":{\"5\":1}}],[\"中国\",{\"1\":{\"9\":1}}],[\"中部\",{\"1\":{\"9\":4}}],[\"中有\",{\"1\":{\"6\":1}}],[\"中\",{\"0\":{\"8\":1},\"1\":{\"5\":1,\"6\":1,\"7\":2,\"9\":1}}],[\"未\",{\"1\":{\"5\":2}}],[\"初始\",{\"1\":{\"5\":1}}],[\"服务端\",{\"1\":{\"5\":2}}],[\"服务器\",{\"1\":{\"5\":1}}],[\"基准\",{\"1\":{\"9\":2}}],[\"基于\",{\"1\":{\"5\":1,\"9\":1}}],[\"基础知识\",{\"1\":{\"0\":1}}],[\"海外\",{\"1\":{\"5\":1}}],[\"8\",{\"1\":{\"5\":2,\"7\":1}}],[\"+\",{\"1\":{\"5\":2,\"7\":1}}],[\"为\",{\"1\":{\"5\":3,\"6\":2}}],[\"配置\",{\"1\":{\"5\":4,\"7\":4}}],[\"统一\",{\"1\":{\"5\":1}}],[\"将\",{\"1\":{\"5\":1}}],[\"期望\",{\"1\":{\"5\":1}}],[\"背景\",{\"0\":{\"5\":1}}],[\"描述\",{\"0\":{\"4\":1,\"6\":1}}],[\"问题\",{\"0\":{\"4\":1},\"1\":{\"7\":1}}],[\"时\",{\"1\":{\"9\":1}}],[\"时差\",{\"1\":{\"9\":2}}],[\"时间\",{\"1\":{\"6\":1,\"9\":11}}],[\"时区\",{\"0\":{\"3\":1,\"8\":1,\"9\":1},\"1\":{\"5\":3,\"6\":1,\"7\":3,\"9\":4}}],[\"时候\",{\"1\":{\"2\":1}}],[\"与\",{\"0\":{\"3\":1},\"1\":{\"9\":2}}],[\"一直\",{\"1\":{\"7\":1}}],[\"一字段\",{\"1\":{\"6\":1}}],[\"一致性\",{\"0\":{\"3\":1}}],[\"一些\",{\"1\":{\"2\":1}}],[\"一个\",{\"1\":{\"0\":1}}],[\"留下\",{\"1\":{\"2\":1}}],[\"到\",{\"1\":{\"2\":1}}],[\"阅读\",{\"1\":{\"2\":1}}],[\"你\",{\"1\":{\"2\":1}}],[\"部分\",{\"1\":{\"2\":1}}],[\"在\",{\"1\":{\"2\":2,\"5\":2,\"6\":2,\"7\":3,\"9\":4}}],[\"个人见解\",{\"1\":{\"1\":1}}],[\"代表\",{\"1\":{\"1\":1,\"9\":3}}],[\"仅\",{\"1\":{\"1\":1}}],[\"文章\",{\"1\":{\"1\":1}}],[\"下述\",{\"1\":{\"1\":1}}],[\"想法\",{\"1\":{\"1\":1}}],[\"生活\",{\"1\":{\"1\":1}}],[\"漫谈\",{\"0\":{\"1\":1}}],[\"改变\",{\"1\":{\"0\":1}}],[\"者\",{\"1\":{\"0\":2}}],[\"查询\",{\"0\":{\"8\":1},\"1\":{\"0\":1}}],[\"其中\",{\"1\":{\"0\":1}}],[\"巨大\",{\"1\":{\"0\":1}}],[\"是\",{\"1\":{\"0\":2,\"9\":4}}],[\"偶尔\",{\"1\":{\"0\":1}}],[\"记得\",{\"1\":{\"0\":1}}],[\"记录\",{\"1\":{\"0\":1}}],[\"请\",{\"1\":{\"0\":1,\"9\":1}}],[\"进行\",{\"1\":{\"0\":1,\"5\":1,\"7\":2}}],[\"定期\",{\"1\":{\"0\":1}}],[\"信息\",{\"1\":{\"0\":1}}],[\"领域\",{\"1\":{\"0\":1}}],[\"等同\",{\"1\":{\"9\":1}}],[\"等\",{\"1\":{\"0\":1}}],[\"人工智能\",{\"1\":{\"0\":1}}],[\"视觉\",{\"1\":{\"0\":1}}],[\"开发\",{\"1\":{\"0\":1}}],[\"、\",{\"0\":{\"9\":1},\"1\":{\"0\":3,\"9\":1}}],[\"主要\",{\"1\":{\"0\":1}}],[\",\",{\"1\":{\"0\":3,\"5\":2,\"6\":1,\"9\":12},\"2\":{\"10\":1}}],[\"。\",{\"1\":{\"0\":4,\"1\":1,\"2\":1,\"5\":1,\"6\":2,\"9\":14}}],[\"世界\",{\"1\":{\"0\":2,\"1\":1,\"9\":1}}],[\"笔记\",{\"1\":{\"0\":1,\"2\":1}}],[\"学习\",{\"1\":{\"0\":1,\"2\":1}}],[\"学术\",{\"1\":{\"0\":1}}],[\"欢迎\",{\"1\":{\"0\":1}}],[\"旅程\",{\"1\":{\"0\":1}}],[\"技术\",{\"0\":{\"2\":1},\"1\":{\"0\":1}}],[\"和\",{\"0\":{\"9\":1},\"1\":{\"0\":2,\"1\":2,\"9\":5}}],[\"的\",{\"0\":{\"8\":1},\"1\":{\"0\":4,\"1\":1,\"2\":2,\"6\":3,\"9\":14}}],[\"自己\",{\"1\":{\"0\":1}}],[\"以下\",{\"1\":{\"8\":1}}],[\"以\",{\"1\":{\"0\":1,\"9\":2}}],[\"，\",{\"1\":{\"0\":4,\"1\":1,\"2\":1,\"5\":4,\"6\":3,\"7\":1,\"9\":22}}],[\"博客\",{\"1\":{\"0\":2}}],[\"创建\",{\"1\":{\"0\":1}}],[\"我们\",{\"1\":{\"0\":1}}],[\"我会\",{\"1\":{\"0\":1}}],[\"我\",{\"0\":{\"0\":1},\"1\":{\"0\":1,\"2\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
